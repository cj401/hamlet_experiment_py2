#!/bin/csh -f

# Careful with echo as this script works by writing to standard out. All echo
# output should be sent to /dev/stderr, or, a symbol designed to evaluate to
# that device alias if it is available. 

# set echo 

set num_args = $#argv

if (${num_args} < 2) then
    # echo "Script kjb_makedepend needs at least two arguments."
    exit 1 
endif 

set dir = "$1"
set suffix_str = "$2"

# echo dir:${dir} > kjb_makedepend_dir_arg

set c_source = 0
set cxx_source = 0

if ("${suffix_str}" == "-c") then
    set c_source = 1
else if ("${suffix_str}" == "-x") then
    set cxx_source = 1
else 
    echo "First argument: ${arg} to script kjb_makedepend is invalid." >> /dev/stderr
    exit 1 
endif 

set rest_of_args = "$argv[3-$num_args]"
# echo rest_of_args: ${rest_of_args}


if ("${dir}" != "") then 
    pushd ${dir} > /dev/null
endif 

${KJB_CAT} /dev/null > Makefile-depend-tmp
if ("${status}") exit 1

set files = `${MAKE_SCRIPT_PATH}stream_file_names ${suffix_str}`

if ("${files}" != "") then
    ${KJB_CAT} /dev/null > Makefile-depend-tmp-2
    if ("${status}") exit 1

    which ${MAKEDEPEND} >& /dev/null
  
    if (${status}) then
        echo "Script kjb_makedepend cannot find 'makedepend'" >> /dev/stderr
        echo "Perhaps it is not installed on this system?" >> /dev/stderr

        exit 1
    endif 

    if ($?KJB_VERBOSE) then
        echo " "  >> /dev/stderr
        echo "${KJB_VERBOSE_INDENT}Script kjb_makedepend is executing: "  >> /dev/stderr
        echo "    ${MAKEDEPEND} -f Makefile-depend-tmp-2 ${rest_of_args} ${files}"  >> /dev/stderr
        echo "in directory `pwd`."  >> /dev/stderr
    endif

    ${MAKEDEPEND} -f Makefile-depend-tmp-2 \
                ${rest_of_args} \
                ${files} \
                >& /dev/null
    if ("${status}") exit 1

    if ($?KJB_VERBOSE) then
        echo "Done kjb_makedepend in `pwd`."  >> /dev/stderr
        echo " "  >> /dev/stderr
    endif

    if ("${dir}" != "") then
        if ($?KJB_DEBUG) then
            ${KJB_CP} Makefile-depend-tmp-2 Makefile-depend-tmp-2-SAVE
            if ("${status}") exit 1
        endif 
        
        sed "s#^\([A-Za-z0-9_\-]\)#${dir}\1#" Makefile-depend-tmp-2 > Makefile-depend-tmp-3
        if ("${status}") exit 1

        ${KJB_MV} Makefile-depend-tmp-3  Makefile-depend-tmp-2
        if ("${status}") exit 1
    endif  

    if ($?KJB_DEBUG) then
        ${KJB_CP} Makefile-depend-tmp-2 Makefile-depend-tmp-2-SAVE-2
        if ("${status}") exit 1
    endif 

    ${KJB_RM} .Makefile-depend-tmp-2.swp
    if ("${status}") exit 1

    ${VIM_FOR_MAKE} Makefile-depend-tmp-2 < ${MAKE_EDIT_PATH}Dirs.${VIM_SUFFIX} >& /dev/null
    if ("${status}") exit 1

    if ($?KJB_DEBUG) then
        ${KJB_CP} Makefile-depend-tmp-2 Makefile-depend-tmp-2-SAVE-3
        if ("${status}") exit 1
    endif 

    ${KJB_RM} .Makefile-depend-tmp-2.swp
    if ("${status}") exit 1

    ${VIM_FOR_MAKE} Makefile-depend-tmp-2 < ${MAKE_EDIT_PATH}Depend.${VIM_SUFFIX} >& /dev/null
    if ("${status}") exit 1

    if ($?KJB_DEBUG) then
        ${KJB_CP} Makefile-depend-tmp-2 Makefile-depend-tmp-2-SAVE-4
        if ("${status}") exit 1
    endif 

    if (${c_source}) then
        sed 's/\([a-z0-9A-Z_\-\.]*\)\.o *:/$(OBJ_DIR)\1.o :/' Makefile-depend-tmp-2 > Makefile-depend-tmp 
    else if (${cxx_source}) then
        sed 's/\([a-z0-9A-Z_\-\.]*\)\.o *:/$(CXX_OBJ_DIR)\1.o :/' Makefile-depend-tmp-2 > Makefile-depend-tmp 
    endif 

    if ("${status}") exit 1

    ${KJB_RM} Makefile-depend-tmp-2
    ${KJB_RM} Makefile-depend-tmp-2.bak
endif 

${KJB_CAT} Makefile-depend-tmp
${KJB_RM}  Makefile-depend-tmp


